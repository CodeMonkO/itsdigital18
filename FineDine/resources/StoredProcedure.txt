DELIMITER $$

DROP PROCEDURE IF EXISTS `finedinedb`.`restaurantProc`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `restaurantProc`(IN uuidParam VARCHAR(40), IN requestedSeats INTEGER)
BEGIN
	DECLARE BookedSeats, MaxSeats, UpdatedSeats INTEGER DEFAULT 0;
	SELECT CAST(bookedseat AS UNSIGNED),CAST(maxseat AS UNSIGNED) INTO BookedSeats, MaxSeats FROM restaurantlive WHERE UUID = uuidParam LOCK IN SHARE MODE;
	SET UpdatedSeats = BookedSeats + requestedSeats;
	IF requestedSeats <= (MaxSeats - BookedSeats) THEN
		START TRANSACTION;
		UPDATE restaurantlive SET bookedseat = UpdatedSeats, statusflag = '1' WHERE UUID = uuidParam;
		COMMIT;
	END IF;
	IF MaxSeats = UpdatedSeats THEN
		START TRANSACTION;
		UPDATE restaurantlive SET statusflag = '0' WHERE UUID = uuidParam;
		COMMIT;
	END IF;
    END$$

DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `finedinedb`.`passwordProc` $$
CREATE PROCEDURE `finedinedb`.`passwordProc`(IN newPassword VARCHAR(100), email VARCHAR(100) ) 

    BEGIN
	START TRANSACTION;
	UPDATE restaurantdetails SET PASSWORD = newPassword WHERE rmail = email;
	COMMIT;
    END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS `finedinedb`.`updateprofileProc`$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `updateprofileProc`(IN existuuid VARCHAR(40), newRname VARCHAR(100), newRmail VARCHAR(100), newPassword VARCHAR(100), newRcontact VARCHAR(15), newRaltcontact VARCHAR(15), newRtype VARCHAR(150), newMaxseat VARCHAR(10), newOtime VARCHAR(5), newCtime VARCHAR(5), newRating VARCHAR(1), newMenufilelocation VARCHAR(200))
BEGIN
	START TRANSACTION;
	UPDATE finedinedb.restaurantdetails 
	SET
	rname = newRname, 
	rmail = newRmail , 
	PASSWORD = newPassword , 
	rcontact = newRcontact , 
	altcontact = newRaltcontact , 
	rtype = newRtype , 
	maxseat = newMaxseat , 
	otime = newOtime , 
	ctime = newCtime, 
	rating = newRating , 
	menufilelocation = newMenufilelocation
	WHERE UUID = existuuid ;
	
	UPDATE finedinedb.restaurantlive 
	SET
	maxseat = newMaxseat 
	WHERE UUID = existuuid;
	COMMIT;
	
	
    END$$

DELIMITER ;